<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Bon_de_commande extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Bon_de_commande_model');
    } 

    /*
     * Listing of bon_de_commande
     */
    function index()
    {
        $data['bon_de_commande'] = $this->Bon_de_commande_model->get_all_bon_de_commande();
        
        $data['_view'] = 'bon_de_commande/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new bon_de_commande
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('EVALUTION_FOURNISSEUR','EVALUTION FOURNISSEUR','numeric');
		$this->form_validation->set_rules('QUANTITE','QUANTITE','numeric');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'TYPE_BON_COMMANDE' => $this->input->post('TYPE_BON_COMMANDE'),
				'ID_FICHE_BESOIN' => $this->input->post('ID_FICHE_BESOIN'),
				'ID_SERVICE_GEN' => $this->input->post('ID_SERVICE_GEN'),
				'ID_DAF' => $this->input->post('ID_DAF'),
				'ID_DG' => $this->input->post('ID_DG'),
				'NOM_FOURNISSEUR' => $this->input->post('NOM_FOURNISSEUR'),
				'ADRESSE_FOURNISSEUR' => $this->input->post('ADRESSE_FOURNISSEUR'),
				'TELEPHONE_FOURNISSEUR' => $this->input->post('TELEPHONE_FOURNISSEUR'),
				'DATE_BON_DEMANDE' => $this->input->post('DATE_BON_DEMANDE'),
				'DESIGNATION_PRODUIT' => $this->input->post('DESIGNATION_PRODUIT'),
				'QUANTITE' => $this->input->post('QUANTITE'),
				'OBSERVATION' => $this->input->post('OBSERVATION'),
				'PROFORMAT_FOURNISSEUR' => $this->input->post('PROFORMAT_FOURNISSEUR'),
				'FACTURE' => $this->input->post('FACTURE'),
				'ETAT_BON_COMMANDE' => $this->input->post('ETAT_BON_COMMANDE'),
				'EVALUTION_FOURNISSEUR' => $this->input->post('EVALUTION_FOURNISSEUR'),
				'SIGNATURE_SERVICE_GEN' => $this->input->post('SIGNATURE_SERVICE_GEN'),
				'SIGNATURE_DAF' => $this->input->post('SIGNATURE_DAF'),
				'SIGNATURE_DG' => $this->input->post('SIGNATURE_DG'),
				'DATE_CREATION' => $this->input->post('DATE_CREATION'),
				'DATE_MODIFICATION' => $this->input->post('DATE_MODIFICATION'),
				'DATE_SUPPRESSION' => $this->input->post('DATE_SUPPRESSION'),
            );
            
            $bon_de_commande_id = $this->Bon_de_commande_model->add_bon_de_commande($params);
            redirect('bon_de_commande/index');
        }
        else
        {
			$this->load->model('Fiche_de_besoin_model');
			$data['all_fiche_de_besoin'] = $this->Fiche_de_besoin_model->get_all_fiche_de_besoin();

			$this->load->model('Service_gen_model');
			$data['all_service_gen'] = $this->Service_gen_model->get_all_service_gen();

			$this->load->model('Directeur_financier_model');
			$data['all_directeur_financier'] = $this->Directeur_financier_model->get_all_directeur_financier();

			$this->load->model('Direction_gen_model');
			$data['all_direction_gen'] = $this->Direction_gen_model->get_all_direction_gen();
            
            $data['_view'] = 'bon_de_commande/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a bon_de_commande
     */
    function edit($ID)
    {   
        // check if the bon_de_commande exists before trying to edit it
        $data['bon_de_commande'] = $this->Bon_de_commande_model->get_bon_de_commande($ID);
        
        if(isset($data['bon_de_commande']['ID']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('EVALUTION_FOURNISSEUR','EVALUTION FOURNISSEUR','numeric');
			$this->form_validation->set_rules('QUANTITE','QUANTITE','numeric');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'TYPE_BON_COMMANDE' => $this->input->post('TYPE_BON_COMMANDE'),
					'ID_FICHE_BESOIN' => $this->input->post('ID_FICHE_BESOIN'),
					'ID_SERVICE_GEN' => $this->input->post('ID_SERVICE_GEN'),
					'ID_DAF' => $this->input->post('ID_DAF'),
					'ID_DG' => $this->input->post('ID_DG'),
					'NOM_FOURNISSEUR' => $this->input->post('NOM_FOURNISSEUR'),
					'ADRESSE_FOURNISSEUR' => $this->input->post('ADRESSE_FOURNISSEUR'),
					'TELEPHONE_FOURNISSEUR' => $this->input->post('TELEPHONE_FOURNISSEUR'),
					'DATE_BON_DEMANDE' => $this->input->post('DATE_BON_DEMANDE'),
					'DESIGNATION_PRODUIT' => $this->input->post('DESIGNATION_PRODUIT'),
					'QUANTITE' => $this->input->post('QUANTITE'),
					'OBSERVATION' => $this->input->post('OBSERVATION'),
					'PROFORMAT_FOURNISSEUR' => $this->input->post('PROFORMAT_FOURNISSEUR'),
					'FACTURE' => $this->input->post('FACTURE'),
					'ETAT_BON_COMMANDE' => $this->input->post('ETAT_BON_COMMANDE'),
					'EVALUTION_FOURNISSEUR' => $this->input->post('EVALUTION_FOURNISSEUR'),
					'SIGNATURE_SERVICE_GEN' => $this->input->post('SIGNATURE_SERVICE_GEN'),
					'SIGNATURE_DAF' => $this->input->post('SIGNATURE_DAF'),
					'SIGNATURE_DG' => $this->input->post('SIGNATURE_DG'),
					'DATE_CREATION' => $this->input->post('DATE_CREATION'),
					'DATE_MODIFICATION' => $this->input->post('DATE_MODIFICATION'),
					'DATE_SUPPRESSION' => $this->input->post('DATE_SUPPRESSION'),
                );

                $this->Bon_de_commande_model->update_bon_de_commande($ID,$params);            
                redirect('bon_de_commande/index');
            }
            else
            {
				$this->load->model('Fiche_de_besoin_model');
				$data['all_fiche_de_besoin'] = $this->Fiche_de_besoin_model->get_all_fiche_de_besoin();

				$this->load->model('Service_gen_model');
				$data['all_service_gen'] = $this->Service_gen_model->get_all_service_gen();

				$this->load->model('Directeur_financier_model');
				$data['all_directeur_financier'] = $this->Directeur_financier_model->get_all_directeur_financier();

				$this->load->model('Direction_gen_model');
				$data['all_direction_gen'] = $this->Direction_gen_model->get_all_direction_gen();

                $data['_view'] = 'bon_de_commande/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The bon_de_commande you are trying to edit does not exist.');
    } 

    /*
     * Deleting bon_de_commande
     */
    function remove($ID)
    {
        $bon_de_commande = $this->Bon_de_commande_model->get_bon_de_commande($ID);

        // check if the bon_de_commande exists before trying to delete it
        if(isset($bon_de_commande['ID']))
        {
            $this->Bon_de_commande_model->delete_bon_de_commande($ID);
            redirect('bon_de_commande/index');
        }
        else
            show_error('The bon_de_commande you are trying to delete does not exist.');
    }
    
}
