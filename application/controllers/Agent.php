<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Agent extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Agent_model');
    } 

    /*
     * Listing of agent
     */
    function index()
    {
        $data['agent'] = $this->Agent_model->get_all_agent();
        
        $data['_view'] = 'agent/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new agent
     */
    function add()
    {   


        $this->load->library('form_validation');

		$this->form_validation->set_rules('DEPARTEMENT','DEPARTEMENT','required');
		$this->form_validation->set_rules('NOM_COMPLET','NOM COMPLET','required');
		$this->form_validation->set_rules('MOT_DE_PASSE','MOT DE PASSE','alpha_numeric');
		$this->form_validation->set_rules('CHEF_DEPARTEMENT','CHEF DEPARTEMENT','required');
		$this->form_validation->set_rules('TELEPHONE','TELEPHONE','numeric');
		
		if($this->form_validation->run())     
        {   
            
            $params = array(
				'MOT_DE_PASSE' => $this->input->post('MOT_DE_PASSE'),
				'NOM_COMPLET' => $this->input->post('NOM_COMPLET'),
				'DEPARTEMENT' => $this->input->post('DEPARTEMENT'),
				'FONCTION' => $this->input->post('FONCTION'),
				'CHEF_DEPARTEMENT' => $this->input->post('CHEF_DEPARTEMENT'),
				'TELEPHONE' => $this->input->post('TELEPHONE'),
				'DATE_CREATION' => $this->load->helper('date'),
				'DATE_MODIFICATION' => $this->input->post('DATE_MODIFICATION'),
				'DATE_SUPPRESSION' => $this->input->post('DATE_SUPPRESSION'),
            );
            
            $agent_id = $this->Agent_model->add_agent($params);
            redirect('agent/index');
        }
        else
        {            
            $data['_view'] = 'agent/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a agent
     */
    function edit($ID)
    {   
        // check if the agent exists before trying to edit it
        $data['agent'] = $this->Agent_model->get_agent($ID);
        
        if(isset($data['agent']['ID']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('DEPARTEMENT','DEPARTEMENT','required');
			$this->form_validation->set_rules('NOM_COMPLET','NOM COMPLET','required');
			$this->form_validation->set_rules('MOT_DE_PASSE','MOT DE PASSE','alpha_numeric');
			$this->form_validation->set_rules('CHEF_DEPARTEMENT','CHEF DEPARTEMENT','required');
			$this->form_validation->set_rules('TELEPHONE','TELEPHONE','numeric');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'MOT_DE_PASSE' => $this->input->post('MOT_DE_PASSE'),
					'NOM_COMPLET' => $this->input->post('NOM_COMPLET'),
					'DEPARTEMENT' => $this->input->post('DEPARTEMENT'),
					'FONCTION' => $this->input->post('FONCTION'),
					'CHEF_DEPARTEMENT' => $this->input->post('CHEF_DEPARTEMENT'),
					'TELEPHONE' => $this->input->post('TELEPHONE'),
					'DATE_CREATION' => $this->input->post('DATE_CREATION'),
					'DATE_MODIFICATION' => $this->input->post('DATE_MODIFICATION'),
					'DATE_SUPPRESSION' => $this->input->post('DATE_SUPPRESSION'),
                );

                $this->Agent_model->update_agent($ID,$params);            
                redirect('agent/index');
            }
            else
            {
                $data['_view'] = 'agent/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The agent you are trying to edit does not exist.');
    } 

    /*
     * Deleting agent
     */
    function remove($ID)
    {
        $agent = $this->Agent_model->get_agent($ID);

        // check if the agent exists before trying to delete it
        if(isset($agent['ID']))
        {
            $this->Agent_model->delete_agent($ID);
            redirect('agent/index');
        }
        else
            show_error('The agent you are trying to delete does not exist.');
    }
    
}
